~ V2.3-stable
[New]
• Merge with LayaBattMon ROM integration version to improve maintainability

[Fixes Issues]
• Fix multiple issues for better stability
• Temporary removes deviceidle feature to reduce unnecessary errors (wait for next update?)
• Minor misc fixes

[Optimization & improvements]
• Major changes at code logic and improving it for better stability and compatibility
• Removed property checks to reduce unnecessary overhead
• Improved PermHandler Logic and stability
• Reduce unnecessary overhead
• Remove duplicate closing braces
• Simplified changelog

~ V2.2-stable
[New]
• Added supported governor detector for fallbacks if powersave doesn't existed

[Fixed issues]
• Fix for some exynos devices that doesn't have powersave (fallback to energy_step)

[Optimization & Improvement]
• Use more-efficient property checks instead of getprop to reduce overhead
• Improved compatibility for exynos devices
• Minor code cleanup

~ V2.1-stable
• Forcing to override governor permissions from read-only to read/write (this fixes was created due to encore tweaks module causing governor to be read-only)
• Reuses .join() paths once.
• Safer name extraction with let Some(...) = to avoid hidden bugs.
• Less .trim() redundancy (some min/max could include newline).
• Avoid unnecessary .clone() on Option<String>
• Minor code logic improvement and optimization

~ V2.0-stable
• Improved inotify mechanism
• Added Inotify Overflow detection
• Added more logging if inotify shows an abnormalities
• Dynamically change inotify buffer if inotify overflow was detected
• Reduce polling loop for property to 4s
• Sleep 2s and retries if inotify error
• Avoid Unused Cow<'static, str>
• Reduced potential minor memory deduplication for screen state and governor string
• Use Atomic for Bool State to Reduce locking overhead
• Improved getprop function efficiency
• Avoid .to_string() in default closure
• [Inotify] Clamp the buffer_size growth to prevent it growing indefinitely
• Offloading some logic into a background thread
• Significantly Improved compatibility across all devices

~ V1.9-stable
• Increases loop time to 5s to reduce overhead (also to reduce constantly checking debug.laya.battmon_enabled prop)
• Improved log message clarity
• Added build metadata (Advanced build date)
• Major refactor code & further code optimizations

~ V1.8-stable
• Refine code for better stability and lower overhead
• Remove static load defaults function to reduce overhead
• Dynamically saves the current frequencies & governor right before screen locked (alternative of static load defaults)
• Restore cpu freqs/governor completely if debug.laya.battmon_enabled value was 0
• Fix schedutil or other folder detected as cpu policy
• Sleep 30s after sys.boot_complete=1 for stability reason
• Code improvement & misc optimizations

~ V1.7.3-stable
• Improved log accuracy

~ V1.7.2-stable
• Optimized in-memory map logic
• Fixed init ownership (changed to system:system)

~ V1.7.1-stable
• Optimized apply CPU Freq/gov logic
• [logic] Added fallback to scaling_min_freq if cpuinfo_min_freq shows an error or abnormalities
• Updated readme.txt

~ V1.7-stable
• Optimized looping logic
• Improved apply & restore CPU freq / governor logic
• Set to powersave governor when screen off and restore governor back to normal when screen on
• Loop every 0.5s while screen off to prevent sudden lag (doesn't apply when the screen is on to avoid overhead)
• Removed unused sugov_ext governor constant
• Added Dynamic feature toggle (you can disable the battmon thread if needed through property)
• Reduced power consumption even more and heat control during screen off
• Minor code improvement & optimization

~ V1.6.1-stable
• Added initial support for Unisoc devices
• Minor code changes

~ V1.6-stable
• Added initial support for Snapdragon devices
• Improve further get_screen_state() logic
• Minor changes

~ V1.5-stable
• Refactor code again
• Introduce in-memory map
• Save cpu configuration into in-memory map
• More logging for easier to spot an error
• Remove laya_battmon_default creation 
• Improved lazy static function
• Optimized stability
• Significantly Reduced binary overhead
• Change get_screen_state detection from dumpsys to inotify (thx to @kaminarich for the reference)
• Updated README for better readability
• [init] Changed group into root
• [init] Remove mkdir and chmod
• [init] Remove unnecessary tag

~ V1.4-test
• Fixed known issue
• Improved code
• Added laya battmon helper to manually create folder in /data/local/tmp

~ V1.3-test
• Minor changes
• Removed oneshot and other unnecessary permissions
• Optimized binary stability

~ V1.2-test
• Refactor code
• Added adaptive polling
• Reduce overhead by 10%
• Remove freq log file

~ V1.1-test
• Added sys boot complete
• [code] Use spawn(); instead of output
• More efficient code and reduced overhead
• Added auto Remove freq log after restarting device
• Reduce logging

~ V1.0-test
• Initial battmon test
